{"mappings":"AAiDiB,sBA/CHA,GACVC,KAAKD,SAAWA,EAEhBC,KAAKC,UAAYD,KAAKD,SAASG,cAAc,UAE7CF,KAAKG,aAAeC,MAAMC,KAAKL,KAAKD,SAASO,iBAAiB,yBAC9DN,KAAKO,aAAeP,KAAKG,aAAaK,KAAKC,IACzC,IACE,MAAMC,EAAKD,EAAYE,KAAKC,MAAM,KAAK,GAEvC,OADAC,QAAQC,IAAIJ,GACLK,SAASC,eAAeN,GAC/B,MAAOO,GACP,OAAO,SAERC,QAAQC,GAAgC,OAAhBA,IAE3BnB,KAAKoB,qBAAuB,IAAIC,qBAAqBrB,KAAKsB,yBAAyBC,KAAKvB,MAAO,CAC7FwB,WAAY,oBAEdxB,KAAKyB,oBAAsBzB,KAAKO,aAAamB,SAASP,IACpDnB,KAAKoB,qBAAqBO,QAAQR,MAItCG,yBAAyBM,EAASC,GAChC,MAAMC,EAAUF,EAAQV,QAAQa,GAAUA,EAAMC,iBAC5CF,EAAQG,QACVjC,KAAKkC,kBAAkBJ,EAAQ,GAAGK,QAItCD,kBAAkBf,GAChB,IAAK,MAAMiB,KAAepC,KAAKG,aAC7BiC,EAAYC,UAAUC,OAAO,YAGXtC,KAAKG,aAAaoC,MAAM9B,GAC/BA,EAAYE,KAAKC,MAAM,KAAK,IAC9B,GAAOO,EAAYT,OAElB2B,UAAUG,IAAI,YAC1B3B,QAAQC,IAAI,oBAAqBK,EAAYT,IAC7CV,KAAKC,UAAUwC,MAAQtB,EAAYT,KAKXK,SAASC,eAAe","sources":["src/app/skills.js"],"sourcesContent":["class Skills {\n\n  constructor($element) {\n    this.$element = $element;\n\n    this.$selector = this.$element.querySelector('select');\n\n    this.$jumpAnchors = Array.from(this.$element.querySelectorAll('.m-skills-list-skill'));\n    this.$jumpTargets = this.$jumpAnchors.map(($jumpAnchor) => {\n      try {\n        const id = $jumpAnchor.href.split('#')[1];\n        console.log(id);\n        return document.getElementById(id);\n      } catch (e) {\n        return null;\n      }\n    }).filter(($jumpTarget) => $jumpTarget !== null);\n\n    this.intersectionObserver = new IntersectionObserver(this.onJumpTargetIntersection.bind(this), {\n      rootMargin: '-45% 0% -45% 0%',\n    });\n    this.jumpTargetObservers = this.$jumpTargets.forEach(($jumpTarget) => {\n      this.intersectionObserver.observe($jumpTarget);\n    });\n  }\n\n  onJumpTargetIntersection(entries, observer) {\n    const visible = entries.filter((entry) => entry.isIntersecting);\n    if (visible.length) {\n      this.renderJumpAnchors(visible[0].target);\n    }\n  }\n\n  renderJumpAnchors($jumpTarget) {\n    for (const $jumpAnchor of this.$jumpAnchors) {\n      $jumpAnchor.classList.remove('--active');\n    }\n\n    const $jumpAnchor = this.$jumpAnchors.find(($jumpAnchor) => {\n      const id = $jumpAnchor.href.split('#')[1];\n      return id == `${$jumpTarget.id}`;\n    });\n    $jumpAnchor.classList.add('--active');\n    console.log('setting select to', $jumpTarget.id);\n    this.$selector.value = $jumpTarget.id;\n  }\n\n}\n\nmodule.exports = new Skills(document.getElementById('skills'));\n"],"names":["$element","this","$selector","querySelector","$jumpAnchors","Array","from","querySelectorAll","$jumpTargets","map","$jumpAnchor","id","href","split","console","log","document","getElementById","e","filter","$jumpTarget","intersectionObserver","IntersectionObserver","onJumpTargetIntersection","bind","rootMargin","jumpTargetObservers","forEach","observe","entries","observer","visible","entry","isIntersecting","length","renderJumpAnchors","target","$jumpAnchor2","classList","remove","find","add","value"],"version":3,"file":"index.04687e3b.js.map"}